---
- name: tgrgbox setup
  hosts: localhost
  remote_user: root
  vars_files: 
    - config.yml

  tasks:
  - name: Install docker
    become: true
    ansible.builtin.package:
      name: docker
      state: latest
  - name: Install ansible
    ansible.builtin.package:
      name: ansible
      state: latest
  - name: Create directory
    ansible.builtin.file:
      path: "{{ tgrgbox_dest_dir }}"
      state: directory
      recurse: yes
  - name: Create .env file
    ansible.builtin.template:
      src: templates/env.j2
      dest: "{{ tgrgbox_dest_dir }}/.env"
      mode: u=rw
  - name: Create docker-compose file
    ansible.builtin.template:
      src: templates/docker-compose.yml.j2
      dest: "{{ tgrgbox_dest_dir }}/docker-compose.yml"
  - name: create Oven Media Engine directory
    ansible.builtin.file:
      path: "{{ tgrgbox_dest_dir }}/ovenmediaengine"
      state: directory
  - name: create Oven Media Engine logs directory
    ansible.builtin.file:
      path: "{{ tgrgbox_dest_dir }}/ovenmediaengine/logs"
      state: directory
  - name: create Oven Media Engine config directory
    ansible.builtin.file:
      path: "{{ tgrgbox_dest_dir }}/ovenmediaengine/origin_conf"
      state: directory
  - name: setup Oven Media Engine Server config
    ansible.builtin.template:
      src: templates/Server.xml.j2
      dest: "{{ tgrgbox_dest_dir }}/ovenmediaengine/origin_conf/Server.xml"
  - name: setup Oven Media Engine Logging Config
    ansible.builtin.template:
      src: templates/Logger.xml.j2
      dest: "{{ tgrgbox_dest_dir }}/ovenmediaengine/origin_conf/Logger.xml"
  - name: create www root
    ansible.builtin.file:
      path: "{{ tgrgbox_dest_dir }}/html"
      state: directory
  - name: create nginx config root
    ansible.builtin.file:
      path: "{{ tgrgbox_dest_dir }}/nginx_conf.d"
      state: directory
  - name: create certbot root
    ansible.builtin.file:
      path: "{{ tgrgbox_dest_dir }}/nginx_secrets"
      state: directory
  - name: create nginx tgrgbox config
    ansible.builtin.template:
      src: templates/tgrgbox.conf.j2
      dest: "{{ tgrgbox_dest_dir }}/nginx_conf.d/tgrgbox.conf"
  - name: generate tgrgbox.tv
    ansible.builtin.shell:
      chdir: "{{playbook_dir}}/../tgrgbace.tv"
      cmd: "HMAC_KEY={{ome_secret_key}} HOSTNAME={{tgrgbox_hostname}} npm install"
  - name: create streamkey root
    ansible.builtin.file:
      path: "{{ tgrgbox_dest_dir }}/ome-keygen"
      state: directory
  - name: generate streamkey index.js
    ansible.builtin.template:
      src: templates/streamkey.index.js.j2
      dest: "{{ tgrgbox_dest_dir }}/ome-keygen/index.js"
  - name: generate streamkey package.json
    ansible.builtin.template:
      src: templates/streamkey.package.json.j2
      dest: "{{ tgrgbox_dest_dir }}/ome-keygen/package.json"
  - name: run npm install for streamkey
    ansible.builtin.shell:
      chdir: "{{ tgrgbox_dest_dir }}/ome-keygen"
      cmd: "npm install"
  - name: copy tgrgbox.tv
    ansible.builtin.copy:
      src: "{{playbook_dir}}/../tgrgbace.tv/dist/"
      dest: "{{ tgrgbox_dest_dir }}/html"

