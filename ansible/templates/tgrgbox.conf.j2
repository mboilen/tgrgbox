server {
    # Listen to port 443 on both IPv4 and IPv6.
    listen 443 ssl;
    listen [::]:443 ssl;

    # Domain names this server should respond to.
    server_name {{tgrgbox_hostname}};

    # Load the certificate files.
    ssl_certificate         /etc/letsencrypt/live/{{tgrgbox_hostname}}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{tgrgbox_hostname}}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{tgrgbox_hostname}}/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;


    location /vouch {
        # forward the /validate request to Vouch Proxy
        proxy_pass http://vouch-proxy:9090;

        # be sure to pass the original host header
        proxy_set_header Host $http_host;

        # Vouch Proxy only acts on the request headers
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";

        # these return values are used by the @error401 call
        auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
        auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
        auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
    }

    location /streamkey {
        auth_request /vouch/validate;
        auth_request_set $auth_resp_user $upstream_http_x_vouch_user;
        proxy_set_header X-User $auth_resp_user;
        proxy_pass http://ome-keygen:8080;
    }

    # if validate returns `401 not authorized` then forward the request to the error401block
    error_page 401 = @error401;

    location @error401 {
        # redirect to Vouch Proxy for login
        return 302 https://{{tgrgbox_hostname}}/vouch/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err;

    }

    location ~^/(?:ome-wss|ome-hls) {
        auth_request /vouch/validate;
        rewrite ^/(?:ome-wss|ome-hls)/(.+) /$1 break;
        proxy_pass http://ovenmediaengine:3333;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_redirect off;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
    }

    location / {
        auth_request /vouch/validate;
        root /usr/share/nginx/html;
    }
}

server {
    # Drop any request that does not match any of the other server names.
    listen               443 ssl default_server;
    ssl_reject_handshake on;
}
