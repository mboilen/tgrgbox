version: "3.7"

services:
#https://hub.docker.com/r/airensoft/ovenmediaengine/tags
  ovenmediaengine:
    container_name: ovenmediaengine
    image: airensoft/ovenmediaengine:0.17.3
    ports:
      - "1935:1935/tcp"
      - "3333:3333/tcp"
      - "3478:3478/tcp"
      - "4000:4000/udp"
      - "8081:8081/tcp"
      - "9000:9000"
      - "9999:9999/udp"
      - "10000-10005:10000-10005/udp"
    environment:
      - TGRGBOX_HOST=${TGRGBOX_HOST}
      - TGRGBOX_WEB_API_KEY=${TGRGBOX_WEB_API_KEY}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./ome-conf:/opt/ovenmediaengine/bin/origin_conf
    depends_on:
      - "tgrgbox-web"
    restart: unless-stopped
    command: /opt/ovenmediaengine/bin/OvenMediaEngine -c /opt/ovenmediaengine/bin/origin_conf
    labels:
      - "traefik.enable=true"
        #This sort of sucks.  The hls playlist doesn't know about the prefix, so the application prefix has
        #to be in this rule
      - "traefik.http.routers.ome-wss-rtr.rule=Host(`$TGRGBOX_HOST`) && (PathPrefix(`/ome-wss`) || PathPrefix(`/ome-hls`) || PathPrefix(`/tgrgbace`))"
      - "traefik.http.middlewares.ome-strip.stripprefix.prefixes=/ome-wss,/ome-hls"
      - "traefik.http.routers.ome-wss-rtr.middlewares=ome-strip@docker"
      - "traefik.http.routers.ome-wss-rtr.tls=true"
      - "traefik.http.routers.ome-wss-rtr.tls.certresolver=tgrgboxresolver"
      - "traefik.http.services.ome-wss-rtr.loadbalancer.server.port=3333"
    networks:
      - tgrgbox-network

  tgrgbox-web:
    image: mboilen/tgrgbox-web:0.1.22
    container_name: tgrgbox-web
    environment:
      - TGRGBOX_API_KEY=${TGRGBOX_WEB_API_KEY}
      - TGRGBOX_DISCORD_CLIENT_ID=${TGRGBOX_DISCORD_CLIENT_ID}
      - TGRGBOX_DISCORD_CLIENT_SECRET=${TGRGBOX_DISCORD_CLIENT_SECRET}
        #- DEBUG=tgrgbox:*
        #- DEBUG_DEPTH=4
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./tgrgbox/config/default.yml:/app/config/default.yml:ro
      - ./tgrgbox/data:/app/data
      - ./tgrgbox/sessions:/app/sessions
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tgrgbox-web.rule=Host(`$TGRGBOX_HOST`)"
      - "traefik.http.routers.tgrgbox-web.tls=true"
      - "traefik.http.routers.tgrgbox-web.tls.certresolver=tgrgboxresolver"
      - "traefik.http.services.tgrgbox-web.loadbalancer.server.port=8080"
    networks:
      - tgrgbox-network

  traefik:
    image: traefik:v3.3.2
    container_name: traefik
    restart: unless-stopped
    profiles: ["reverse-proxy"]
    ports:
      - 80:80
      - 443:443
        #- 8080:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/acme/acme.json
    command:
      #- "--log.level=DEBUG"
      #- "--accessLog=true"

      #- "--api.dashboard=true"
      #- "--api.insecure=true"

      - "--providers.docker=true"

      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"

      - "--certificatesresolvers.tgrgboxresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.tgrgboxresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.tgrgboxresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.tgrgboxresolver.acme.storage=/acme/acme.json"

    labels:
      - "traefik.enable=true"
    networks:
      - tgrgbox-network

networks:
  tgrgbox-network:
    external: true

